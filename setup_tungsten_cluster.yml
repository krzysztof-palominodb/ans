- name: Populate all_nodes group

  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  - tag_Name_{{ watcher }}
  - tag_Name_{{ deploy }}
  user: ec2-user
  sudo: yes
  gather_facts: false
  serial: 1

  tasks:

    - add_host: name={{ ec2_ip_address }} groups=all_nodes_public_ip
    - add_host: name={{ ec2_private_ip_address }} groups=all_nodes_ip
    - add_host: name={{ ec2_private_dns_name }} groups=all_nodes_dns
    

- name: Populate cluster_nodes group

  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  user: ec2-user
  sudo: yes
  gather_facts: false
  serial: 1

  tasks:

   - debug: msg="name={{ ec2_private_ip_address }}"
   - add_host: name={{ ec2_private_ip_address }} groups=cluster_nodes_ip
   - add_host: name={{ ec2_private_dns_name }} groups=cluster_nodes_dns
   - debug: msg="nodes {{ groups['cluster_nodes_ip'] }}"
   - debug: msg="nodes {{ groups['cluster_nodes_dns'] }}"

- name: Disable SELinux on tungsten nodes
  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  user: ec2-user
  sudo: yes
  gather_facts: false

  tags:
    - config
    - configure

  tasks:

    - name: Disable SELinux in config
      lineinfile: dest=/etc/selinux/config regexp="^SELINUX=[a-z]*" line="SELINUX=permissive"
      register: result

    - name: reboot instances
      command: reboot
      when: result|changed



- name: Wait for the instances to come back online
  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  user: ec2-user
  sudo: no
  gather_facts: false

  tags:
    - config
    - configure

  tasks:

    - name: Wait for SSH to be available
      local_action: wait_for host={{ item }} port=22
      with_items: groups['all_nodes_public_ip']
      when: result|changed

    - name: Wait for full boot
      pause: seconds=20
      when: result|changed


- name: Configure Tungsten Nodes
  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  user: ec2-user
  sudo: yes
  gather_facts: false

  tags:
    - config
    - configure

  tasks:

    - name: Add Percona repository
      yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm state=present

    - name: Check available memory on the host
      shell: "free -m | grep Mem: | awk '{print $2}'"
      register: memory

    - name: Get local IP of the host
      shell: ip a | grep eth0 | grep inet | awk '{print $2}' | cut -d / -f 1
      register: ipaddress


    - name: Create my.cnf from template
      template: src=./tungsten_templates/my_tungsten.cnf.j2 dest=/etc/my.cnf owner=root group=root mode=0644

    - name: Generate random server_id
      lineinfile: dest=/etc/my.cnf regexp='server_id = [0-9]+.*' line='server_id = {{ 999999|random }}'

    - name: Install Percona Server
      yum: name=Percona-Server-server-55 state=present

    - name: Start Percona Server
      service: name=mysql state=started

    - name: Install MySQL-python
      yum: name=MySQL-python state=present

    - name: Setup MySQL tungsten user
      mysql_user: name=tungsten host=% password=password priv=*.*:'ALL,GRANT' state=present

    - name: ensure anonymous users are not in the database
      mysql_user: name='' host={{ item }} state=absent
      with_items:
        - localhost
        - "{{ inventory_hostname }}"
        - "{{ groups['cluster_nodes_dns'] }}"


    - name: Setup MySQL sbtest user
      mysql_user: name=sbtest host=% password=sbtest priv=*.*:'SELECT, INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE' state=present

- name: Setup SSH and MySQL client

  hosts:
  - tag_Name_{{ node1 }}
  - tag_Name_{{ node2 }}
  - tag_Name_{{ node3 }}
  - tag_Name_{{ watcher }}
  - tag_Name_{{ deploy }}
  user: ec2-user
  sudo: yes
  gather_facts: false

  tasks:

    - name: Add mysql group
      group: name=mysql state=present

    - name: Add tungsten user
      user: name=tungsten state=present groups=mysql

    - name: Add Percona repository
      yum: name=http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm state=present

    - name: Setup /etc/hosts from template
      template: src=/Users/krzysztof/git/ans/tungsten_templates/hosts.j2 dest=/etc/hosts owner=root group=root mode=0644

    - name: Install MySQL Client
      yum: name=Percona-Server-client-55 state=present

    - name: Install Java
      yum: name=java-1.8.0-openjdk state=present

    - name: Download JConnector
      action: command wget http://download.softagency.net/MySQL/Downloads/Connector-J/mysql-connector-java-5.1.34.tar.gz creates=mysql-connector-java-5.1.34.tar.gz

    - name: Decompress JConnector
      action: command mv /home/ec2-user/mysql-connector-java-5.1.34.tar.gz /home/tungsten/ creates=/home/tungsten/mysql-connector-java-5.1.34.tar.gz

    - name: Decompress JConnector
      action: command tar zxf /home/tungsten/mysql-connector-java-5.1.34.tar.gz --directory=/home/tungsten/  creates=/home/tungsten/mysql-connector-java-5.1.34

    - name: Create symlink to /usr/share/java/mysql-connector-java.jar
      file: src=/home/tungsten/mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar dest=/usr/share/java/mysql-connector-java.jar owner=tungsten group=tungsten state=link

    - name: Add export CLASSPATH=/path/mysql-connector-java-ver-bin.jar:$CLASSPATH
      lineinfile: 'dest=/home/tungsten/.bashrc regexp="^export CLASSPATH=/home/tungsten" line="export CLASSPATH=/home/tungsten/mysql-connector-java-5.1.34/mysql-connector-java-5.1.34-bin.jar:$CLASSPATH"'

    - name: Set up SSH key
      file: path=/home/tungsten/.ssh owner=tungsten group=tungsten state=directory

    - name: Set up SSH key
      template: src=/Users/krzysztof/git/ans/tungsten_templates/tungsten_rsa.j2 dest=/home/tungsten/.ssh/id_rsa

    - name: Set up SSH key
      template: src=/Users/krzysztof/git/ans/tungsten_templates/tungsten_rsa.j2.pub dest=/home/tungsten/.ssh/id_rsa.pub

    - name: Fix permissions /home/tungsten/.ssh/authorized_keys
      file: path=/home/tungsten/.ssh/authorized_keys owner=tungsten group=tungsten mode=600 state=touch

    - name: Setup authorized hosts
      action: command cp /home/tungsten/.ssh/id_rsa.pub /home/tungsten/.ssh/authorized_keys

    - name: Fix permissions /home/tungsten/.ssh/authorized_keys
      file: path=/home/tungsten/.ssh/authorized_keys owner=tungsten group=tungsten mode=600 state=file

    - name: Fix permissions /home/tungsten/.ssh/id_rsa
      file: path=/home/tungsten/.ssh/id_rsa owner=tungsten group=tungsten mode=600 state=file

    - name: Create /opt/continuent/software/conf
      file: path=/opt/continuent/software/conf owner=tungsten group=tungsten state=directory

    - name: Create /opt/continuent/software/replicator.conf
      file: path=/opt/continuent/software/replicator.conf owner=tungsten group=tungsten state=directory

    - name: Create /opt/tungsten
      file: path=/opt/tungsten owner=tungsten group=tungsten state=directory

    - name: Add export CONTINUENT_PROFILES=/opt/continuent/software/conf
      lineinfile: dest=/home/tungsten/.bashrc regexp="^export CONTINUENT_PROFILES" line="export CONTINUENT_PROFILES=/opt/continuent/software/conf"

    - name: Add export REPLICATOR_PROFILES=/opt/continuent/software/replicator.conf
      lineinfile: dest=/home/tungsten/.bashrc regexp="^export REPLICATOR_PROFILES" line="export REPLICATOR_PROFILES=/opt/continuent/software/replicator.conf"

    - name: Setup /etc/security/limits.conf
      lineinfile: dest=/etc/security/limits.conf regexp="^tungsten - nofile" line="tungsten - nofile 65535"

    - name: Setup /etc/security/limits.conf
      lineinfile: dest=/etc/security/limits.conf regexp="^tungsten - nproc" line="tungsten - nproc 8096"

    - name: Setup /etc/security/limits.conf
      lineinfile: dest=/etc/security/limits.conf regexp="^mysql - nofile" line="mysql - nofile 65535"

    - name: Setup /etc/security/limits.conf
      lineinfile: dest=/etc/security/limits.conf regexp="^mysql - nproc" line="mysql - nproc 8096"

    - name: Setup sudoers
      lineinfile: 'dest=/etc/sudoers regexp="^tungsten" line="tungsten ALL=(root) NOPASSWD: ALL"'

    - name: Disable requiretty
      lineinfile: dest=/etc/sudoers regexp="^#{0,1}Defaults    requiretty" line='#Defaults    requiretty'

    - name: Install ruby
      yum: name=ruby state=present

    - name: Setup path to /opt/tungsten/continuent/tungsten/tungsten-manager/bin
      lineinfile: 'dest=/home/tungsten/.bashrc regexp="^PATH=$PATH:/opt/tungsten/continuent/tungsten" line="PATH=$PATH:/opt/tungsten/continuent/tungsten/tungsten-manager/bin:/opt/tungsten/continuent/tungsten/tungsten-connector/bin:/opt/tungsten/continuent/tungsten/tungsten-replicator/bin"'

    - name: Export PATH
      lineinfile: dest=/home/tungsten/.bashrc regexp="^export PATH" line="export PATH"


- name: Copy Tungsten tarball

  hosts:
  - tag_Name_{{ deploy }}
  user: ec2-user
  sudo: yes
  gather_facts: false

  tasks:

    - name: Copy Tungsten tarball
      copy: src=/Users/krzysztof/Downloads/continuent-tungsten-2.0.2-459.tar.gz dest=/home/tungsten owner=tungsten group=tungsten mode=0644


