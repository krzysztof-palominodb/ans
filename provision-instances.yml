---
# Ansible Playbook to create and manage EC2 servers

- name: Provision servers
  hosts: localhost
  connection: local
  gather_facts: false

  tags:
      - provision

  vars:
      keypair: kkkey
      instance_type: t1.micro
      security_group: mysql
      # bitnami-cloud-us-west-2/lampstack/bitnami-lampstack-5.4.11-1-linux-ubuntu-12.04.1-x86_64-s3.manifest.xml
      image: ami-35dbde5c
      instance_count: 1

  # Provision 2 servers...

  tasks:
    - name: Launch server
      local_action: ec2 keypair={{ keypair }} group={{ security_group }} instance_type={{ instance_type }} image={{ image }} wait=yes count={{ instance_count }}
      register: ec2

    # Use with_items to add each instances public IP to a new hostgroup for use in the next play.

    - name: Add new servers to host group
      local_action: add_host name={{ item.public_dns_name }} groups=mysql
      with_items: ec2.instances

    - name: Wait for SSH to be available
      local_action: wait_for host={{ item.public_dns_name }} port=22
      with_items: ec2.instances

    - name: Wait for full boot
      pause: seconds=15

    - name: Tag instances
      local_action: ec2_tag resource={{ item.id }} region=us-east-1 state=present
      with_items: ec2.instances
      args:
        tags:
          Name: anstest


# Now, configure our new servers

- name: Configure servers
  hosts: mysql
  user: ubuntu
  sudo: yes
  gather_facts: true

  tags:
    - config
    - configure

  tasks:

    - name: Add Percona repository
      action: command apt-key adv --keyserver keys.gnupg.net --recv-keys 1C4CBDCDCD2EFD2A

    - name: Add Percona step 2
      script: ./repo.sh

    - name: Ensure /etc/mysql/ exists
      file: path=/etc/mysql state=directory mode=755


    - name: Copy my.cnf.sh to remote host and execute it
      script: ./my.cnf.sh

    - name: Install Percona Server
      apt: pkg=percona-server-server-5.6 state=latest install_recommends=no update_cache=yes

