---

- name: Configure MHA node

  hosts:
  - tag_Name_{{ tag1 }}
  - tag_Name_{{ tag2 }}
  - tag_Name_{{ tag3 }}
  user: ubuntu
  sudo: yes
  gather_facts: false

  tags:
    - config
    - configure

  tasks:

   - name: Install libdbd-mysql-perl
     apt: pkg=libdbd-mysql-perl state=latest install_recommends=no update_cache=yes
   - name: Install git
     apt: pkg=git state=latest install_recommends=no update_cache=no
   - name: Install make
     apt: pkg=make state=latest install_recommends=no update_cache=no
   - name: Install libmodule-install-perl
     apt: pkg=libmodule-install-perl state=latest install_recommends=no update_cache=no
   - name: Git checkout
     git: repo=https://github.com/yoshinorim/mha4mysql-node.git dest=/root/mha4mysql-node
   - name: Compile MHA node
     shell: cd /root/mha4mysql-node && perl Makefile.PL && make && make install

- name: Populate mha_nodes group

  hosts:
  - tag_Name_{{ tag1 }}
  - tag_Name_{{ tag2 }}
  - tag_Name_{{ tag3 }}
  user: ubuntu
  sudo: yes
  gather_facts: false
  serial: 1

  tasks:

   - debug: msg="name={{ ec2_dns_name }}"
   - add_host: name={{ ec2_dns_name }} groups=mha_nodes
   - debug: msg="nodes {{ groups['mha_nodes'] }}"

- name: Configure MHA manager

  hosts: 
  - tag_Name_{{ tag1 }}
  - tag_Name_{{ tag2 }}
  - tag_Name_{{ tag3 }}
  user: ubuntu
  sudo: yes
  gather_facts: false

  tags:
    - config
    - configure

  tasks:

#   - debug: msg="name={{ ec2_dns_name }}"
#   - add_host: name={{ ec2_dns_name }} groups=mha_nodes
   - debug: msg="nodes {{ groups['mha_nodes'] }}"

   - name: Install libdbd-mysql-perl
     apt: pkg=libdbd-mysql-perl state=latest install_recommends=no update_cache=yes
   - name: Install git
     apt: pkg=git state=latest install_recommends=no update_cache=no
   - name: Install make
     apt: pkg=make state=latest install_recommends=no update_cache=no
   - name: Install libmodule-install-perl
     apt: pkg=libmodule-install-perl state=latest install_recommends=no update_cache=no
   - name: Install libconfig-tiny-perl
     apt: pkg=libconfig-tiny-perl state=latest install_recommends=no update_cache=no
   - name: Install liblog-dispatch-perl
     apt: pkg=liblog-dispatch-perl state=latest install_recommends=no update_cache=no
   - name: Install libparallel-forkmanager-perl
     apt: pkg=libparallel-forkmanager-perl state=latest install_recommends=no update_cache=no
   - name: Git checkout
     git: repo=https://github.com/yoshinorim/mha4mysql-manager.git dest=/root/mha4mysql-manager
   - name: Compile MHA manager
     shell: cd /root/mha4mysql-manager && perl Makefile.PL && make && make install
   - name: Setup log directory
     file: path=/var/log/masterha/app1/ state=directory


- name: Create SSH key

  hosts:
  - tag_Name_{{ tag1 }}
  user: ubuntu
  sudo: yes
  gather_facts: false

  tasks:

   - name: Create SSH key
     user: name=root generate_ssh_key=yes ssh_key_bits=2048
   - name: Fetch SSH pub key
     fetch: src=/root/.ssh/id_rsa.pub dest=/Users/krzysztof/git/ans/mha_templates/id_rsa.pub flat=yes
   - name: Fetch SSH priv key
     fetch: src=/root/.ssh/id_rsa dest=/Users/krzysztof/git/ans/mha_templates/id_rsa flat=yes
#   - name: Debug
#     debug: msg="{{ lookup('file', '/Users/krzysztof/git/ans/mha_templates/id_rsa.pub') }}"



- name: Setup SSH keys

  hosts:
  - tag_Name_{{ tag1 }}
  - tag_Name_{{ tag2 }}
  - tag_Name_{{ tag3 }}
  user: ubuntu
  sudo: yes
  gather_facts: false

  tasks:

   - name: Clear authorized_keys
     shell: rm -f /root/.ssh/authorized_keys
   - name: Setup SSH key on hosts
     authorized_key: user=root key="{{ lookup('file', '/Users/krzysztof/git/ans/mha_templates/id_rsa.pub') }}"
   - name: Copy SSH priv key
     copy: src=/Users/krzysztof/git/ans/mha_templates/id_rsa dest=/root/.ssh/id_rsa owner=root group=root mode=0600


- name: Setup MHA configuration
  hosts:
  - tag_Name_{{ tag1 }}
  - tag_Name_{{ tag2 }}
  - tag_Name_{{ tag3 }}
  user: ubuntu
  sudo: yes
  gather_facts: false

  tags:
    - config
    - configure

  tasks:
#   - debug: msg="nodes {{ groups['mha_nodes'] }}"
   - name: Setup config from template
     template: src=/Users/krzysztof/git/ans/mha_templates/masterha.j2 dest=/etc/app1.cnf owner=root group=root mode=0644

   - name: Install daemontools
     apt: pkg=daemontools state=latest install_recommends=no update_cache=no

   - name: Create services for svc
     file: path=/service/masterha_app1/ state=directory
   - template: src=/Users/krzysztof/git/ans/mha_templates//run.j2 dest=/service/masterha_app1/run owner=root group=root mode=0755

