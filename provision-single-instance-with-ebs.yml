---
# Ansible Playbook to create and manage EC2 servers

- name: Provision servers
  hosts: localhost
  connection: local
  gather_facts: false

  tags:
      - provision

  vars:
      keypair: kkkey
      instance_type: m1.medium
#      instance_type: r3.4xlarge
      security_group: haproxy
      # bitnami-cloud-us-west-2/lampstack/bitnami-lampstack-5.4.11-1-linux-ubuntu-12.04.1-x86_64-s3.manifest.xml
#      image: ami-1d8c9574 # hvm
      image: ami-018c9568 # paravirtual
#      image: ami-7fede23a # hvm in us-west-1
#      image: ami-75ede230 # paravirtual in us-west-1
      instance_count: 1
      ec2region: "{{ region | default('us-east-1')}}"

  # Provision master

  tasks:
    - name: Launch host
      when: ec2region == "us-east-1"
      local_action: ec2 keypair={{ keypair }} group={{ security_group }} instance_type={{ instance_type }} image={{ image }} wait=yes count={{ instance_count }} region={{ ec2region }}
      register: ec2
#      when: ec2region == "us-east-1"

#    - debug: msg="{{ ec2.instances[0].public_dns_name }}"

    - name: Add new servers to host group
      local_action: add_host name={{ item.public_dns_name }} groups=ec2instance
      with_items: ec2.instances


#    - debug: msg="{{ ec2.instances[0].public_dns_name }}"


    - name: Setup EBS volume
      local_action: ec2_vol instance="{{ item.id }}" device_name=/dev/xvdf volume_size=100 region="{{ ec2region }}"
      with_items: ec2.instances
      register: ec2_vol


#    - debug: msg="coordinates {{ ec2 }}"


    # Use with_items to add each instances public IP to a new hostgroup for use in the next play.

    - name: Add new servers to host group
      local_action: add_host name={{ item.public_dns_name }} groups=mysql,master
      with_items: ec2.instances

    - name: Wait for SSH to be available
      local_action: wait_for host={{ item.public_dns_name }} port=22
      with_items: ec2.instances

    - name: Wait for full boot
      pause: seconds=15

    - name: Tag instances
      local_action: ec2_tag resource={{ item.id }} region={{ ec2region }} state=present
      with_items: ec2.instances
      args:
        tags:
          Name: '{{ tag }}'



- name: Setup disk
  hosts: ec2instance
  user: ubuntu
  sudo: yes
  gather_facts: false

  tasks:

    - name: Ensure /var/lib/mysql/ exists
      file: path=/var/lib/mysql state=directory mode=755

    - name: Install xfsprogs
      apt: pkg=xfsprogs state=latest install_recommends=no update_cache=yes

    - name: Format EBS volume
      filesystem: fstype=xfs dev=/fstype=xfs dev=/dev/xvdf

    - name: Mount EBS on given path
      mount: name=/var/lib/mysql src=/dev/xvdf fstype=xfs opts=noatime,nobarrier state=mounted 
